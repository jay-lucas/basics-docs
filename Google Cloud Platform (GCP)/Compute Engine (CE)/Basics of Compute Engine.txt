What is Compute Engine? 
- Is the service of provisioning and managing virtual machines in the google platform cloud.
  Features:
  * Create and manage lifecycle of Virtual Machines (VM) instances
  * Load balancing and auto scaling for multiple VM instances
  * Attach storage (% network storage) to your VM Instances
  * Manage network connectivity and configuration for your VM instances

- Creating an CE instance
  Step 1: Name the instance
  Step 2: Add Labels
    ** Note: Add Environment, business Units, ect. Add information detailing more information about the vm
  Step 3: Select Region and Zone 
    ** Note: Pick a region closes to you or your customer
  Step 4: Select the Hardware you want to run on the VM (Machine Configuration)
  Step 5: Select the Operating System (image) software you want to run on the VM (Book Disk)
  Step 6: Select Firewall
    ** Note: Allow HTTP traffic allows someone from the outside to access your VM
  Step 7: Create Instance

Important choices to make when creating a VM.
1) What is the hardware? Two important things:
   - Machince Families for different Workloads:
     -> General Purpose (E2, N2, N2D, N1): Best prince-performance ratio
        > Used for Web and application servers, small-medium databases, dev environments
     
     -> Memory Optimized (M2, M1): Ultra high memory workloads
        > Used for Large in-memory databases and In-memory analytics
        
     -> Compute Optimized (C2): Compute intensive workloads
        > Used for Gaming Applications
        
   ** Note: Once you choose the machine family you select a machine type. There are a variety of machine types 
            available for each machine family. memory, disk and networking capabilites increase along with vCPUs for machine types.
            Example: e2-standard-2 = 2 vCPUs
            
2) What operating system and what software do you want on your VM instance?
   - Types of Images:
     -> Public Images: Provided & maintained by Google or open source communities or thrid party vendors
     -> Custom Images: Created by you for your projects

- Simplify VM HTTP server setup
How do we reduce the number of steps in creating an VM instance and setting up a HTTP Server?
Options:
-> Startup script
-> Instance Template
-> Custom Image

- Startup script
  The process of installing any software or installing OS patches when an VM instance is launched is called "Bootstrapping". In VM, 
  you can configure Startup script to bootstrap.
  Step 1) Go to Compute Engine in console and select 'Instance Template' and create a new instance.
  Step 2) Configure similar to creating a new VM
          **Note: Make sure Region is the same as other VMs
  Step 3) Select the 'Advance Options' drop down and go to 'Automation' section
  Step 4) Add start up script to text area
          Example:
          #!/bin/bash
          apt update 
          apt -y install apache2
          echo "Hello world from $(hostname) $(hostname -I)" > /var/www/html/index.html
  Step 5) Select create button
  ** Note: When a VM is created it is given an Internal and External IP. 
           Internal IP: Only accessible within the Google Cloud Platform environment
           External IP: Accessible from the web and can be SSH into. 
           ** Note: When the VM is stopped the External IP is overridden by another IP address. To ensure the External IP doesn't 
           change you must give it an Static IP address. 
           Static IP: An address that remains attached to the instance even when it's stopped. You are billed for Static IP addresses
                      even when it's NOT used. Static IP addresses can be switched to another VM instance in the same project
  
- Instance Template
  -> Why do you need to specify all the VM instances details (image, instance type etc) every time you launch an instance?
     * How about creating a 'Instance Template'
     * Define machine type, image, labels, startup script and other properties
  -> Used to create VM instances and managed instance groups
     * Provides a convient way to create similar instances
  -> CANNOT be updated
     * To make a change, copy an existing template and modify it
  -> (Optional) Image family can be specified (example - debian-9):
     * Latest non-deprecated version of the family is used
  
** Note: Installing OS patches and software at launch of VM instances increase boot up time. To avoid this use a Custom Image
         with OS patches and software pre-installed.

- Custom Images
  -> Reduces Launch Time 
  -> Can be created from an instance, a presistent disk, a snapshot, another image, or a file in Cloud Storage.
     * Persistent Disk: When you attach a hard drive to an instance
     * Snapshot: Copy of a persistent disk
  -> Can be shared across projects
  -> (recommendation) Deprecate old images (& specify replacement image)
  -> (Recommendation) Hardening an Image - Customize images to your corporate security standards
   ** Note: Prefer using Custom Images to Startup script

- How to create a Custom Image
  Step 1) In Compute Engine section select 'Disks'
          ** Note: this is the hard disk associated with your VM what the OS runs on.
  Step 2) Go to 'Actions' at the end of the table with the VM Disk Image you want to create the image from select 'Create Image'
  Step 3) Name the image and select 'Location' 
          - Multi-regional: If you expect the image to be used in other regions
          - Regional: If you expect the image to be used only in a specific region
  ** Note: Never create an custom image from a running instance. You need to stop the instance first or select 'Keep instance running'
           which is not recommended. 
  ** Note: you can create a VM instance from the custom image OR create an instance template based on the custom image
     Step 1) Go to instance Template
     Step 2) Use a current template or create a new one but change the 'Boot Disk' option, select Custom Image tab, and pick custom image.
   
- Troubleshooting Launch of Apache on GCP Virtual Machines
  Step 1) Ensure you can get to the External IP. Make sure your using the right URL
  Step 2) Make sure you can SSH into the VM
  Step 3) If you can SSH into VM, make sure your Apache web server is properly installed
          Command: ls /var/www/html 
          * Results -> index.html
          Step 3a) See what content is in the html file
          Command: cat /var/www/html/index.html
          * Results -> Display the contents of the index.html file
  Step 4) After you ensure step 3, make sure the Apache service is started
          Command: sudo su
                   service apache2 start
          Check to see if URL is working after
  Step 5) If you still can't see URL then click on the VM Instance name URL, go to 'Firewalls' setting and make sure 'HTTP Traffic' is enabled.

- How to keep cost low for Virtual Machines?
   -> Sustained use discounts: An automatic discounts for running VM instances for significant portion of the billing month.
      * Example: If you use N1, N2 machine types for more than 25% of a month, you get a 20% to 50% doscount on every incremental minute.
      * Discount increases with usage
      * No action required on your part, automatically applied by the platform
      * Applicable for instances created by Google Kubernetes Engine and Compute Engin
      * Restrictions:
        1) Does not apply on certain types (example: E2 and A2)
        2) Does not apply to VMs created by App Engine flexible and Dataflow
      
   -> Committed use discounts: 
      * Used for workloads with predictable resource needed
      * Commit for 1 year or 3 years. Best if your app is needed for a known period of time
      * Up to 70% discount based on machine type and GPUs
      * Applicable for instances created by Google Kubernetes Engine and Compute Engin
      * Restrictions:
        1) Does not apply to VMs created by App Engine flexible and Dataflow
      ** Note: To request a Committed use discount VM
               Step 1) Go to Virtual Machines under Compute Engine
               Step 2) select 'Committed use discounts' 
               Step 3) Click tab 'Purchase a committment'
      ** Note: Once you've registured a committment if you create new instances of that type the discounts are applied     
   
 - Preemptible VM
   -> Short-lived cheaper (up to 80%) compute instances
      * Can be stopped by Google Cloud Platform (GCP) any time (preempted) within 24 hours
      * Maximum time to run is 24 hours
      * Instances get 30 second warning (to save anything they want to save)
      * Dynamic Pricing 60 - 91% discount compared to on-demand VMs
   -> Use Preempt VM's if:
      1) Your applications are fault tolerant, meaning you can start and stop them at anytime
      2) You are very cost sensitive, meaning you want to run the workload with minimum cost
      3) Your workload is NOT immediate 
         Example: Non immediate batch processing jobs
   -> Restrictions:
      1) NOT always available
      2) NO Service Level Agreement (SLA) and CANNOT be migrated to regular VMs
      3) NO Automatic Restarts
      4) Free Tier credits not applicable
      ** Note: To launch a Preemptible VM
               Step 1) Go to Virtual Machines under Compute Engine
               Step 2) select 'VM Instances' and hit create 
               Step 3) Click on 'Advance Options' then 'Management' scroll down to 'Availability Policy' section
               Step 4) Select 'Spot' for a fault-tolerant VM
               ** Note: Spot VMs: Latest version of preemptible VMs
                                  Key Difference: Does nt have a maximum runtime
                                  * Compared to traditional preemptible VMs which have a maximum runtime of 24 hours
       
       - Billing
         -> You are billed by the second (after a minimum of 1 minute)
         -> You are NOT billed for compute when a compute instance is stopped
            * However, you will be billed for any storage attached with it!
         -> (Recommendation) Always create 'Budget Alerts' and make use of the Budget exports to stay on top of billing!
         ** Note: How to create budget alerts?
                  Step 1) Go to Navigation menu in Google Cloud Platform and select 'Billing'
                  Step 2) Click on 'Budget and alerts' in the left menu and 'Create Budget'
         -> What are the ways you can save money?
            * Choose the right machine type and image for your workload
            * Be aware of the discounts available:
              - Sustained use discounts
              - Committed use discounts
              - Discounts for preemptible VM instances

- Live Migration & Availability Policy
  How do you keep your VM instances running when a host system needs to be updated (a software or a hardware update needs to be performed)?
  -> Live Migration:
     * Your running instance is automatically migrated to another host in the same zone
     * Does NOT change any attributes or properties of the VM
     * SUPPORTED for instances with local SSDs
     * NOT SUPPORTED for GPUs and preemptible instances
     
  How do you configure Live Migration?
  -> Availability Policy: Where you configure the Live Migration configuration. 
     2 important things to configure:
     * On host maintenance: What should happen during periodic infrasture maintenance?
       - Migrate (default): Migrate VM instance to other hardware
       - Terminate: Stop the VM instance
     * Automatic restart: Restart VM instances if they are terminated due to non-user-initiated reasons (maintenance event, hardwarefaulure etc.)
     ** Note: To access Live Migration
              Step 1) Go to Virtual Machines under Compute Engine
              Step 2) select 'VM Instances' and hit create 
              Step 3) Click on 'Advance Options' then 'Management' scroll down to 'Availability Policy' section
              Step 4) Select 'On host maintenance' you can select 'Migrate VM Instance' or 'Terminate VM Instance', you can also configure automatic
                      restart.
                      
  - Custom Machine Types
    -> What do you do when existing predefined VM options are NOT appropriate for your workload?
       * Create a machine type customized to your needs (a Custom Machine Type)
    -> Custom Machine Type: You can adjust vCPUs, memory and GPUs to your workload needs.
       * Restrictions: Applicable for certain types (E2, N2, or N1 machine types)
       * Supports a wide variety of Operating Systems (OS): CentOS, CoreOS, Debian, Red Hat, Ubuntu, Windows, etc
       * Billed per vCPUs, memory provisioned to each instance
         Example: 
         Hourly Price: $0.033174 / vCPU = $0.004446 /GB
     ** Note: Where can you configure a Custom Machine Type?
              Step 1) Go to Virtual Machines under Compute Engine
              Step 2) select 'VM Instances' and hit create 
              Step 3) Under 'Machine Configuration' you can select the 'Custom' option in the 'Machine type' field

 - Grapic Processing Units (GPUs)
   How do you accelerate math intensive and graphics-intensive workloads for Artificial Intelligence (AI) / Machine Learning (ML) ect?
   -> Add a GPU to your virtual machine:
      * High performance for math intensive and graphics-intensive workloads
      * Higher Cost
      * (Remember) Use images with GPU libraries (Deep Learning) installed, otherwise, GPU will not be used.
      * Restrictions:
        1) GPU NOT supported on all machine types (For example, not supported on Shared-core or Memory-optimized machine types)
        2) On host maintenance can only have the value "Terminate VM Instance"
   -> Recommended Availability Policy for GPUs
      1) Automatic restart - on
      ** Note: Where can you configure a GPUs?
         2 ways to add GPUs, Opt for a GPU family or Opt for a General family and add a GPU if available
         Step 1) Go to Virtual Machines under Compute Engine
         Step 2) select 'VM Instances' and hit create 
         Step 3) Under 'Machine Configuration' you can go to the 'Machine family' select tab 'GPU'
         ** Note: You can add GPUs to even the General-Purpose machine families and you can add a GPU except for 
                  Shared-core and Memory-optimized machine types.
  
  - Important things to remember about a Virtual Machine (VM)
    * A Virtual Machine (VM) is associated to a project.
    * Machine type availability can vary from reagion to regions
    * You can only change the machine type (adjust the number of vCPUs and memory) of a stopped instance, can't change if its running.
    * VM's can be filtered by various properties
      -> Filter by: Name, Zone, Machine Type, Internal/External IP, Network, Labels, Status, etc.
    * Instances are Zonal (Run in a specific zone (in a specific region))
      -> Images are global (You can provide access to other projects - if needed)
      -> Instance templates are global (unless you use zonal resources in your templates)
    * Automatic basic monitoring is enabled
      -> Default Metrics: CPU utilization, Network Bytes (in/out), Disk Throughput/IOPS
      -> For Memory Utilization & Disk Space Utilization - Cloud Monitoring agent is needed
      
- Best Practices for Virtual Machines (VM)
  * Choose Zone and Resion based on:
    -> Cost, regulations, availability needs, latency and specific hardware needs
    -> Distribute instances in multiple zones and regions for high availability
  * Choose the right machine type for your needs:
    -> Use GPUs for Math and Graphic intensive applications
  * Reserve for "committed use discounts" for constant workloads (websites)
  * Use preemptible instances for fault-tolerant, NON time critical workloads
  * Use labels to indicate environment, team, buiness unit, etc
    
- Compute Engine Scenarios
  Scenario 1: What are the pre-requisites to be able to create a VM instance?
  Solution: 
       1) Have a Project 
       2) Have a Billing Account
       3) Compute Engine APIs should be enabled
       
  Scenario 2: You want dedicated hardware for your compliance, laicensing, and management needs
  Solution:
       1) Sole-tenante nodes
  
  Scenario 3: I have 1000s of VM and i want to automate OS patch management, OS inventory management and
              OS configuration management (manage software installed)
  Solution:
       1) Use the VM Manager to do batch Management
       
  Scenario 4: You want to login to your VM instance to install software
  Solution: 
       1) SSH into the VM
       
  Scenario 5: You do not want to expose a VM to the internet
  Solution:
       1) Do NOT assign an external IP address
       
  Scenario 6: You want to allow HTTP traffic to your VM
  Solution: 
       1) Configure Firewall Rules to allow HTTP traffic
